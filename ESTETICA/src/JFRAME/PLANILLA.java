package JFRAME;
import javax.swing.JOptionPane;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NellyLlamileth
 */
public class PLANILLA extends javax.swing.JFrame {

    /**
     * Creates new form PLANILLA
     */
    public PLANILLA() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "NOMBRE", "SUELDO_BAS", "BONIFICACION", "COMISION", "IGGS", "ISR", "DESCU_JUDI", "SUELDO_LIQ", "DEPARTAMENTO"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 119, 980, 241));

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));

        jButton1.setText("GENERAR MATRIZ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("<<<<<PLANILLA>>>>>");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(106, 106, 106)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String StrMat[][]= new String [10][10];
        StrMat = this.Mat();
        this.MakeMa(StrMat);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PLANILLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PLANILLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PLANILLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PLANILLA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PLANILLA().setVisible(true);
            }
        });
    }

   
    
    public void MakeMa(String StrMatriz[][]){
    DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
    mod.setRowCount(10);
    mod.setColumnCount(10);
    for(int Cont=0; Cont<10; Cont++){
       for(int Cont2=0; Cont2<10; Cont2++){
       jTable1.setValueAt(StrMatriz[Cont][Cont2], Cont, Cont2);
       
       }
     }
    }
    
   
    
  
    
    public static String StrMatriz [][]= new String[10][10];
    public static Scanner Leer =new Scanner(System.in);//Declaramos un Scanner para que lea los dato.
    public  static int intSuelBas=0, intBoni=0, intComi=0, intDesJudi=0, intSuelLi1=0, intSuelLi2=0, intSuelLi3=0, intSuelLi4=0, intDep=0, intISR=0, intIGGS=0, intIGGS2=0 ;//Declaramos unas variables tipo entero para los calculos con numeros.
    public static String strSuelBas1, strBoni1, strComi1, strDesJudi1, strSuelLi8, strDep1, strIRS2, strIGGS2;//Declaramos unas variables String para poder mostrar
    public static double  dblISR1=0, dblIGGS1=0,dblSuelLi4=0, dblSuelLi5=0, dblSuelLi6=0, dblSuelLi7=0 ;//Declaramos variables tipo Double para la operaciones con punto decimal.
    
    
    
    public String[][] Mat(){
        
        
        for(int intCont=0; intCont<10; intCont++){//Pedimos los codigos de los empleados
          StrMatriz[intCont][0]=JOptionPane.showInputDialog("Ingrese el codigo del Empleado en la posicion: ["+intCont+"] [0]");
        }
        
         System.out.println("\n");
        
        for(int intCont=0; intCont<10; intCont++){//Pedimos los Nombres de los empleados
          StrMatriz[intCont][1]=JOptionPane.showInputDialog("Ingrese el  Nombre del Empelado  en la posicion: ["+intCont+"] [1]");

        }
        
        System.out.println("\n");
        
        for(int intCont=0; intCont<10; intCont++){//Se ingresa un numero aleatorio en la variable entera
          intSuelBas=(int)(Math.random()*99000+1000);
          strSuelBas1= Integer.toString(intSuelBas);//Se vuelve String la varible entera           
          StrMatriz[intCont][2]=strSuelBas1;//Se Guarda en la Matriz
        }
        
        
        for(int intCont=0; intCont<10; intCont++){//Se ingresa un numero aleatorio en la variable entera
          intBoni=(int)(Math.random()*500+300);   
          strBoni1= Integer.toString(intBoni);//Se vuelve String la varible entera   
          StrMatriz[intCont][3]=strBoni1;//Se Guarda en la Matriz
        }
        
        
        for(int intCont=0; intCont<10; intCont++){//Se ingresa un numero aleatorio en la variable entera    
          intComi=(int)(Math.random()*500+300);
          strComi1= Integer.toString(intComi);//Se vuelve String la varible entera   
          StrMatriz[intCont][4]=strComi1;//Se Guarda en la Matriz
        }
        
        
        for(int intCont=0; intCont<10; intCont++){//Se usara if's para poder buscar en el suedlo base conforme a los rangos para sacarle su ISR
        intIGGS=Integer.parseInt(JOptionPane.showInputDialog("El Empelado en la posicion: ["+intCont+"] [0], ¿Pagará IGGS?: 1=SI 0=NO"));
      
        
        if(intIGGS==0){
        dblIGGS1= 0;
        }
        if(intIGGS==1){
        intIGGS2=Integer.parseInt(StrMatriz[intCont][2]);
        dblIGGS1= intIGGS2*0.0483;
        }
        strIRS2= String.valueOf((String.format("%.2f", dblIGGS1)));//Se vuelve String la varible double y que este dando unicamente 2 decimales
        StrMatriz[intCont][5]=strIRS2;//Se Guarda en la Matriz 
        }
        
        
    
        for(int intCont=0; intCont<10; intCont++){//Se usara if's para poder buscar en el suedlo base conforme a los rangos para sacarle su ISR
        intISR= Integer.parseInt(StrMatriz[intCont][2]);
        if(intISR<=5000){
        dblISR1= intISR*0.3;
        }
        if(intISR>=5001&&intISR<=10000){
        dblISR1= intISR*0.5;
        }
        if(intISR>=10001&&intISR<=100000){
        dblISR1= intISR*0.10;
        }
        strIRS2= String.valueOf((String.format("%.2f", dblISR1)));//Se vuelve String la varible double y que este dando unicamente 2 decimales
        StrMatriz[intCont][6]=strIRS2;//Se Guarda en la Matriz 
        }
        
        
        for(int intCont=0; intCont<10; intCont++){//Se ingresa un numero aleatorio en la variable entera    
          intDesJudi=(int)(Math.random()*500+300);
          strDesJudi1= Integer.toString(intDesJudi);//Se vuelve String la varible entera   
          StrMatriz[intCont][7]=strDesJudi1;//Se Guarda en la Matriz
        }
        
        
        for(int intCont=0; intCont<10; intCont++){
          intSuelLi1= Integer.parseInt(StrMatriz[intCont][2]);//Se toman los valores en dichas posiciones de la matriz para tomar su dato y convertirlo a enteros
          intSuelLi2= Integer.parseInt(StrMatriz[intCont][3]);
          intSuelLi3= Integer.parseInt(StrMatriz[intCont][4]);
          intSuelLi4= Integer.parseInt(StrMatriz[intCont][7]);
          dblSuelLi5= Double.parseDouble(StrMatriz[intCont][5]);//Se toman los valores en dichas posiciones de la matriz para tomar su dato y convertirlo a double
          dblSuelLi6= Double.parseDouble(StrMatriz[intCont][6]);
          dblSuelLi7= intSuelLi1+intSuelLi2+intSuelLi3-intSuelLi4-dblSuelLi5-dblSuelLi6;//Con los datos tomados de las posiciones anteriores se usaran para este calculo y se guarda en una variable String
          strSuelLi8= String.valueOf((String.format("%.2f", dblSuelLi7)));//Se vuelve String la varible double y que este dando unicamente 2 decimales
          StrMatriz[intCont][8]=strSuelLi8;//Se Guarda en la Matriz 
        }
        
        for(int intCont=0; intCont<10; intCont++){//Se ingresa un numero aleatorio en la variable entera  
          intDep=(int)(Math.random()*5+1);
          strDep1= Integer.toString(intDep);//Se vuelve String la varible entera 
          StrMatriz[intCont][9]=strDep1;//Se Guarda en la Matriz
        }
        
        float fltVector[]= new float[5];//Se declara un vector tipo entero
        float fltD1=0,fltD2=0,fltD3=0,fltD4=0,fltD5=0, fltD6=0;//Se declaran varibales tipo entero como contadores para los departamentos
        for(int Cont=0; Cont<10; Cont++)//se Buscara en las posiciones de la matriz el #departamento para poder contabilizar cuantos empleados hay en cada departamento.
        {
        if(StrMatriz[Cont][9].equals("1")){
        fltD6=Float.parseFloat(StrMatriz[Cont][8]);
        fltVector[0]=fltD1=fltD1+fltD6;
        }
        if(StrMatriz[Cont][9].equals("2")){
        fltD6=Float.parseFloat(StrMatriz[Cont][8]);
        fltVector[1]=fltD2=fltD2+fltD6;
        }
        if(StrMatriz[Cont][9].equals("3")){
        fltD6=Float.parseFloat(StrMatriz[Cont][8]);
        fltVector[2]=fltD3=fltD3+fltD6;
        }
        if(StrMatriz[Cont][9].equals("4")){
        fltD6=Float.parseFloat(StrMatriz[Cont][8]);
        fltVector[3]=fltD4=fltD4+fltD6;
        }
        if(StrMatriz[Cont][9].equals("5")){
        fltD6=Float.parseFloat(StrMatriz[Cont][8]);
        fltVector[4]=fltD5=fltD5+fltD6;
        }
         }
        
        
        JOptionPane.showMessageDialog(null,"\n\nEmpleados en cada departamento:  \n"+
        "\n<<Departamento 1>>= "+fltVector[0]+//Se muestran los datos de cuantos empleados hay en cada departamento.
        "\n<<Departamento 2>>= "+fltVector[1]+
        "\n<<Departamento 3>>= "+fltVector[2]+
        "\n<<Departamento 4>>= "+fltVector[3]+
        "\n<<Departamento 5>>= "+fltVector[4]);
        
           
        return StrMatriz;
    
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

















